######################################################################
# OPT-IN ALLOW (WITH RATIONALE)
######################################################################
# nginx must listen on a low port then drop privs itself, because
# it is NOT socket activated (cf. CUPS for a counterexample).
# FIXME: why is AF_NETLINK needed?
User=
PrivateUsers=no
PrivateNetwork=no
RestrictAddressFamilies=AF_INET AF_INET6
CapabilityBoundingSet=CAP_NET_BIND_SERVICE CAP_SETUID CAP_SETGID
SystemCallFilter=@setuid
IPAddressDeny=
# nginx must have write access to logs, because
# it does NOT use syslog or stdio.
ReadWritePaths=/var/log/nginx
# nginx wants write access to /run/nginx.pid.
ReadWritePaths=/run
# FIXME: instead change /run/nginx.pid to /run/nginx/nginx.pid!
#X#RuntimeDirectory=nginx
#X#PIDFile=/run/nginx/nginx.pid
# nginx needs CAP_DAC_OVERRIDE because logrotate makes nginx's logs www-data:adm 640, but
# nginx opens them as root *before* dropping privileges.
CapabilityBoundingSet=CAP_DAC_OVERRIDE

# This mitigates forkbombs.
# Set a "high water mark" well above what we expect to reach, but
# well below what a forkbomb could otherwise achieve.
# Ref. http://nginx.org/en/docs/ngx_core_module.html#thread_pool
#      http://nginx.org/en/docs/ngx_core_module.html#worker_processes
TasksMax=1000
# HOST SPECIFIC: I have 8 CPU cores; nginx can have up to 4 cores.
CPUQuota=400%
# HOST SPECIFIC: I have 16GB of RAM; penalize nginx when it goes over 4GB.
MemoryHigh=4G
