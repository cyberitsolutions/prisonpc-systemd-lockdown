# I'm frankly too scared to try locking this one down yet. ---twb, May 2019

# /join #systemd
# 19:47 <twb> Does dbus.service need AF_INET6 access?
# 19:47 <twb> Isn't it purely AF_UNIX?
# 19:49 <grawity> normally it should be purely AF_UNIX
# 19:50 <grawity> it's configurable to listen on TCP sockets, but if your system bus is bound to TCP, you have big problems
# 19:50 <twb> I was gonna add some "systemd-analyze security" mojo to it, but since it's needed for things like "systemctl daemon-reload", I decided it was too scary
# 19:50 <grawity> well, if you break it, systemctl can just fall back to the private socket
# 19:51 <grawity> however... dbus-daemon *does* directly fork auto-activated bus services, if they do not have a corresponding systemd .service yet
# 19:51 <grawity> and *those* might need AF_INET6 etc
# 19:51 <twb> Interesting
# 19:51 <grawity> though again, shouldn't be many of those left on the system bus
# 19:52 <grawity> with most services either having systemd-based activation instead, or being non-activatable
# 19:52 <grawity> busctl --system --activatable
# 19:53 <grawity> I don't think I've recently had anything but dbus-daemon in my dbus.service cgroup, so that's fine
# 19:53 <grawity> session/user bus is a different story, still most DE stuff activated directly

# /join #systemd  (weeks later)
# 15:46 <twb> does the dbus unit actually "do things", or does it just send and receive IPC calls?
# 15:46 <twb> I assume whenever dbus wants to e.g. start up polkitd to ask it a question, that's actually implemented by sending an IPC to systemd saying "btw please start polkit" --- dbus itself doesn't actually need and privileges at all
# 15:47 <grawity> dbus-daemon traditionally execs daemons on its own (through a setuid helper)
# 15:47 <twb> I thought it stopped doing that when systemd landed
# 15:48 <grawity> nowadays 99% of system bus services are systemd-activatable, as in their D-Bus .service files refer to a SystemdService= (and some don't even have a valid Exec= anymore)
# 15:48 <twb> I remember seeing messages along the lines of "activated (via systemd)"
# 15:48 <twb> grawity: ah so it's basically opt-in on a per dbus listener basis, and in practice most of them do, but in theory one might not?
# 15:48 <grawity> yes
# 15:48 <twb> ohhh
# 15:48 <twb> I thought it was automatically done via a generator that read all the dbus listener xml files
# 15:50 <grawity> (of course, all of that only applies when a client tries to contact a service that isn't running yet â€“ if it's already running and claimed the bus name, then there's no further "activation" needed)
# 16:54 <twb> grawity: can I look at a running system and see easily which (system) dbus things aren't systemd-ized?
# 17:18 <grawity> currently running ones?
# 17:18 <grawity> just everything in dbus-daemon's cgroup, except for dbus-daemon itself
# 17:19 <twb> So like I can just look in "systemctl status" under dbus.service
# 17:19 <twb> I don't see anything there except dbus itself
# 17:20 <twb> systemd-cgls reports the same
# 17:21 <grawity> then that's it, there are no services running that were bus-activated and not through systemd
# 17:21 <twb> Is there a way to tell by eyeballing the list of files in a package, without having to install it?
# 17:22 <twb> I guess I'd have to at least look inside the .service units and look for Service= options
# 17:22 <grawity> I'd download and unpack the D-Bus .service file
# 17:22 <grawity> (if there's one)
