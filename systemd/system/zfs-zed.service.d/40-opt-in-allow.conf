# WARNING: zed scripts can do ARBITRARY THINGS.
#          You may need to whitelist additional things.
#
# As at zfs-zed=0.8.0-2, the following things are done (mostly by default):
#
#   * log to syslog via logger(1)
#   * send emails to root via mail(1)
#   * lock /run/lock/zed* via flock(1)
#   * send phone popups via curl(1)  (off by default)
#   * run "zpool get" and "zpool status"
#   * run "zpool scrub" (after a resilver, off by default)

[Service]

# NOTE: zed will error immediately if not run as root.
User=

# zed needs access to the /dev/zfs (but not /dev/zdNN?)
#   zed[123]: Failed to initialize libzfs
PrivateDevices=no
DeviceAllow=/dev/zfs

# zed needs privileged ioctl access to /dev/zfs
#   zed[123]: Failed to seek to eid=0
CapabilityBoundingSet=CAP_SYS_ADMIN

# zed can call "zpool scrub" when resilver ends (disabled by default).
# Bizarrely, this breaks when PrivateUsers=yes.
#   zpool[123]: cannot scrub omega: permission denied
# This happens even though there's no setuid call, and
# the current user (root) account should be in getpw* and getgr.
# strace of an unconfined "zpool scrub" indicates it's doing
#   openat(AT_FDCWD, "/dev/zfs", O_RDWR)    = 3
#   ioctl(3, _IOC(_IOC_NONE, 0x5a, 0x7, 0), 0x7ffe0f1d31f0) = -1 EPERM
PrivateUsers=no

# NOTE: zed is working WITHOUT these, so I'm leaving them out.
# But they seem like things that are likely to cause weirdness later.
#DeviceAllow=block-zvol
#PrivateMounts=no

# zed writes to /run/zed.pid and /run/zed.state.
# I assume the latter must persist across zed restarts, so
# a simple RuntimeDirectory=zfs-zed is not appropriate.
ReadWritePaths=/run

# zed -M (off by default) needs this.
CapabilityBoundingSet=CAP_IPC_LOCK

# DEBUGGING
#ExecStart=
#ExecStart=zed -F -v -M
#ExecStart=mail -s zfs-zed-test root
#ExecStartPre=zpool status
#ExecStartPre=zpool get all omega
#ExecStartPre=zpool scrub omega
#ExecStartPre=sleep 1
#ExecStartPre=zpool scrub -s omega
#ExecStartPre=find /etc/zfs/ -xdev -not -readable -ls
#ExecStartPre=find /etc/zfs/ -xdev -type f -not -executable -ls
#ExecStartPre=find /dev/ -ls
